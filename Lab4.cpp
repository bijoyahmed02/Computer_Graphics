#include <windows.h>
#include <GL/glut.h>
void renderBitmapString(float x, float y, float z,
                        void *font, char *string)
{
    char *c;
    glRasterPos3f(x, y,z);
    for (c=string; *c != '\0'; c++)
    {
        glutBitmapCharacter(font, *c);
    }
}
void display()
{
    glClearColor(1.0f, 1.0f, 0.0f, 0.0f);
    glClear(GL_COLOR_BUFFER_BIT);
    glBegin(GL_LINES);
    glColor3f(0.0f,0.0f,1.0f);
    glVertex2f(-1.0f,0.0f);
    glVertex2f(1.0f,0.0f);
    glVertex2f(0.0f,-1.0f);
    glVertex2f(0.0f,1.0f);
    glEnd();
    // Newzealand flag
    glBegin(GL_POLYGON);
    glColor3ub(0.0f,51.0f,102.0f);
    glVertex2f(0.1f,0.1f);
    glVertex2f(0.9f,0.1f);
    glVertex2f(0.9f,0.7f);
    glVertex2f(0.1f,0.7f);
    glEnd();
    glBegin(GL_POLYGON);
    glColor3ub(0.0f,51.0f,102.0f);
    glVertex2f(0.1f,0.4f);
    glVertex2f(0.5f,0.4f);
    glVertex2f(0.5f,0.7f);
    glVertex2f(0.1f,0.7f);
    glEnd();
    glBegin(GL_POLYGON);
    glColor3f(1.0f,1.0f,1.0f);
    glVertex2f(0.1f,0.44f);
    glVertex2f(0.1f,0.4f);
    glVertex2f(0.14f,0.4f);
    glVertex2f(0.5f,0.66f);
    glVertex2f(0.5f,0.7f);
    glVertex2f(0.46f,0.7f);
    glEnd();
    glBegin(GL_POLYGON);
    glColor3f(1.0f,1.0f,1.0f);
    glVertex2f(0.1f,0.66f);
    glVertex2f(0.1f,0.7f);
    glVertex2f(0.14f,0.7f);
    glVertex2f(0.5f,0.44f);
    glVertex2f(0.5f,0.4f);
    glVertex2f(0.46f,0.4f);
    glEnd();
    glBegin(GL_POLYGON);
    glColor3ub(204.0f,0.0f,0.0f);
    glVertex2f(0.1f,0.7f);
    glVertex2f(0.3f,0.55f);
    glVertex2f(0.3f,0.53f);
    glVertex2f(0.1f,0.68f);
    glEnd();
    glBegin(GL_POLYGON);
    glColor3ub(204.0f,0.0f,0.0f);
    glVertex2f(0.5f,0.4f);
    glVertex2f(0.5f,0.42f);
    glVertex2f(0.3f,0.57f);
    glVertex2f(0.3f,0.55f);
    glEnd();
    glBegin(GL_POLYGON);
    glColor3ub(204.0f,0.0f,0.0f);
    glVertex2f(0.1f,0.4f);
    glVertex2f(0.12f,0.4f);
    glVertex2f(0.3f,0.53f);
    glVertex2f(0.3f,0.55f);
    glEnd();
    glBegin(GL_POLYGON);
    glColor3ub(204.0f,0.0f,0.0f);
    glVertex2f(0.5f,0.7f);
    glVertex2f(0.48f,0.7f);
    glVertex2f(0.3f,0.57f);
    glVertex2f(0.3f,0.55f);
    glEnd();
    glBegin(GL_POLYGON);
    glColor3f(1.0f,1.0f,1.0f);
    glVertex2f(0.26f,0.4f);
    glVertex2f(0.34f,0.4f);
    glVertex2f(0.34f,0.7f);
    glVertex2f(0.26f,0.7f);
    glEnd();
    glBegin(GL_POLYGON);
    glColor3f(1.0f,1.0f,1.0f);
    glVertex2f(0.1f,0.51f);
    glVertex2f(0.1f,0.59f);
    glVertex2f(0.5f,0.59f);
    glVertex2f(0.5f,0.51f);
    glEnd();
    glBegin(GL_POLYGON);
    glColor3ub(204.0f,0.0f,0.0f);
    glVertex2f(0.28f,0.4f);
    glVertex2f(0.32f,0.4f);
    glVertex2f(0.32f,0.7f);
    glVertex2f(0.28f,0.7f);
    glEnd();
    glBegin(GL_POLYGON);
    glColor3ub(204.0f,0.0f,0.0f);
    glVertex2f(0.1f,0.53f);
    glVertex2f(0.1f,0.57f);
    glVertex2f(0.5f,0.57f);
    glVertex2f(0.5f,0.53f);
    glEnd();
    glBegin(GL_POLYGON);
    glColor3f(1.0f,1.0f,1.0f);
    glVertex2f(0.69f,0.60f);
    glVertex2f(0.70f,0.63f);
    glVertex2f(0.71f,0.60f);
    glVertex2f(0.74f,0.60f);
    glVertex2f(0.72f,0.58f);
    glVertex2f(0.73f,0.55f);
    glVertex2f(0.70f,0.57f);
    glVertex2f(0.67f,0.55f);
    glVertex2f(0.685f,0.58f);
    glVertex2f(0.66f,0.60f);
    glVertex2f(0.69f,0.60f);
    glEnd();
    glBegin(GL_POLYGON);
    glColor3ub(204.0f,0.0f,0.0f);
    glVertex2f(0.695f,0.595f);
    glVertex2f(0.70f,0.625f);
    glVertex2f(0.705f,0.595f);
    glVertex2f(0.735f,0.595f);
    glVertex2f(0.715f,0.585f);
    glVertex2f(0.73f,0.55f);
    glVertex2f(0.70f,0.58f);
    glVertex2f(0.675f,0.555f);
    glVertex2f(0.690f,0.58f);
    glVertex2f(0.665f,0.595f);
    glVertex2f(0.695f,0.595f);
    glEnd();
    glBegin(GL_POLYGON);
    glColor3f(1.0f,1.0f,1.0f);
    glVertex2f(0.69f,0.30f);
    glVertex2f(0.70f,0.33f);
    glVertex2f(0.71f,0.30f);
    glVertex2f(0.74f,0.30f);
    glVertex2f(0.72f,0.28f);
    glVertex2f(0.73f,0.25f);
    glVertex2f(0.70f,0.27f);
    glVertex2f(0.67f,0.25f);
    glVertex2f(0.685f,0.28f);
    glVertex2f(0.66f,0.30f);
    glVertex2f(0.69f,0.30f);
    glEnd();
    glBegin(GL_POLYGON);
    glColor3ub(204.0f,0.0f,0.0f);
    glVertex2f(0.695f,0.295f);
    glVertex2f(0.70f,0.325f);
    glVertex2f(0.705f,0.295f);
    glVertex2f(0.735f,0.295f);
    glVertex2f(0.715f,0.285f);
    glVertex2f(0.73f,0.25f);
    glVertex2f(0.70f,0.28f);
    glVertex2f(0.675f,0.255f);
    glVertex2f(0.690f,0.28f);
    glVertex2f(0.665f,0.295f);
    glVertex2f(0.695f,0.295f);
    glEnd();
    glBegin(GL_POLYGON);
    glColor3f(1.0f,1.0f,1.0f);
    glVertex2f(0.79f,0.50f);
    glVertex2f(0.80f,0.53f);
    glVertex2f(0.81f,0.50f);
    glVertex2f(0.84f,0.50f);
    glVertex2f(0.82f,0.48f);
    glVertex2f(0.83f,0.45f);
    glVertex2f(0.80f,0.47f);
    glVertex2f(0.77f,0.45f);
    glVertex2f(0.785f,0.48f);
    glVertex2f(0.76f,0.50f);
    glVertex2f(0.79f,0.50f);
    glEnd();
    glBegin(GL_POLYGON);
    glColor3ub(204.0f,0.0f,0.0f);
    glVertex2f(0.795f,0.495f);
    glVertex2f(0.80f,0.525f);
    glVertex2f(0.805f,0.495f);
    glVertex2f(0.835f,0.495f);
    glVertex2f(0.815f,0.485f);
    glVertex2f(0.83f,0.45f);
    glVertex2f(0.80f,0.48f);
    glVertex2f(0.775f,0.455f);
    glVertex2f(0.790f,0.48f);
    glVertex2f(0.765f,0.495f);
    glVertex2f(0.795f,0.495f);
    glEnd();
    glBegin(GL_POLYGON);
    glColor3f(1.0f,1.0f,1.0f);
    glVertex2f(0.59f,0.45f);
    glVertex2f(0.60f,0.48f);
    glVertex2f(0.61f,0.45f);
    glVertex2f(0.64f,0.45f);
    glVertex2f(0.62f,0.43f);
    glVertex2f(0.63f,0.40f);
    glVertex2f(0.60f,0.42f);
    glVertex2f(0.57f,0.40f);
    glVertex2f(0.585f,0.43f);
    glVertex2f(0.56f,0.45f);
    glVertex2f(0.59f,0.45f);
    glEnd();
    glBegin(GL_POLYGON);
    glColor3ub(204.0f,0.0f,0.0f);
    glVertex2f(0.595f,0.445f);
    glVertex2f(0.60f,0.475f);
    glVertex2f(0.605f,0.445f);
    glVertex2f(0.635f,0.445f);
    glVertex2f(0.615f,0.435f);
    glVertex2f(0.63f,0.40f);
    glVertex2f(0.60f,0.43f);
    glVertex2f(0.575f,0.405f);
    glVertex2f(0.590f,0.43f);
    glVertex2f(0.565f,0.445f);
    glVertex2f(0.595f,0.445f);
    glEnd();
    //Canada flag
    glBegin(GL_POLYGON);
    glColor3f(1.0f,0.0f,0.0f);
    glVertex2f(-0.1f,0.1f);
    glVertex2f(-0.9f,0.1f);
    glVertex2f(-0.9f,0.7f);
    glVertex2f(-0.1f,0.7f);
    glEnd();
    glBegin(GL_POLYGON);
    glColor3f(1.0f,1.0f,1.0f);
    glVertex2f(-0.3f,0.1f);
    glVertex2f(-0.7f,0.1f);
    glVertex2f(-0.7f,0.7f);
    glVertex2f(-0.3f,0.7f);
    glEnd();
    glBegin(GL_POLYGON);
    glColor3f(1.0f,0.0f,0.0f);
    glVertex2f(-0.44f,0.38f);
    glVertex2f(-0.36f,0.44f);
    glVertex2f(-0.38f,0.46f);
    glVertex2f(-0.34f,0.50f);
    glVertex2f(-0.38f,0.50f);
    glVertex2f(-0.38f,0.52f);
    glVertex2f(-0.46f,0.48f);
    glVertex2f(-0.44f,0.56f);
    glVertex2f(-0.48f,0.54f);
    glVertex2f(-0.50f,0.58f);
    glVertex2f(-0.52f,0.54f);
    glVertex2f(-0.56f,0.56f);
    glVertex2f(-0.54f,0.48f);
    glVertex2f(-0.62f,0.52f);
    glVertex2f(-0.62f,0.50f);
    glVertex2f(-0.66f,0.50f);
    glVertex2f(-0.62f,0.46f);
    glVertex2f(-0.64f,0.44f);
    glVertex2f(-0.56f,0.38f);
    glEnd();
    glBegin(GL_POLYGON);
    glColor3f(1.0f,0.0f,0.0f);
    glVertex2f(-0.44f,0.36f);
    glVertex2f(-0.44f,0.38f);
    glVertex2f(-0.56f,0.38f);
    glVertex2f(-0.56f,0.36f);
    glEnd();
    glBegin(GL_POLYGON);
    glColor3f(1.0f,0.0f,0.0f);
    glVertex2f(-0.49f,0.26f);
    glVertex2f(-0.51f,0.26f);
    glVertex2f(-0.51f,0.36f);
    glVertex2f(-0.49f,0.36f);
    glEnd();
//Samoa flag
    glBegin(GL_POLYGON);
    glColor3ub(204.0f,0.0f,0.0f);
    glVertex2f(-0.1f,-0.1f);
    glVertex2f(-0.9f,-0.1f);
    glVertex2f(-0.9f,-0.7f);
    glVertex2f(-0.1f,-0.7f);
    glEnd();
    glBegin(GL_POLYGON);
    glColor3ub(0.0f,51.0f,102.0f);
    glVertex2f(-0.5f,-0.4f);
    glVertex2f(-0.9f,-0.4f);
    glVertex2f(-0.9f,-0.1f);
    glVertex2f(-0.5f,-0.1f);
    glEnd();
    glBegin(GL_POLYGON);
    glColor3f(1.0f,1.0f,1.0f);
    glVertex2f(-0.72f,-0.16f);
    glVertex2f(-0.71f,-0.14f);
    glVertex2f(-0.7f,-0.16f);
    glVertex2f(-0.68f,-0.16f);
    glVertex2f(-0.695f,-0.17f);
    glVertex2f(-0.69f,-0.19f);
    glVertex2f(-0.71f,-0.18f);
    glVertex2f(-0.73f,-0.19f);
    glVertex2f(-0.725f,-0.175f);
    glVertex2f(-0.74f,-0.16f);
    glVertex2f(-0.72f,-0.16f);
    glEnd();
    glBegin(GL_POLYGON);
    glColor3f(1.0f,1.0f,1.0f);
    glVertex2f(-0.72f,-0.34f);
    glVertex2f(-0.71f,-0.32f);
    glVertex2f(-0.7f,-0.34f);
    glVertex2f(-0.68f,-0.34f);
    glVertex2f(-0.695f,-0.35f);
    glVertex2f(-0.69f,-0.37f);
    glVertex2f(-0.71f,-0.36f);
    glVertex2f(-0.73f,-0.37f);
    glVertex2f(-0.725f,-0.355f);
    glVertex2f(-0.74f,-0.34f);
    glVertex2f(-0.72f,-0.34f);
    glEnd();
    glBegin(GL_POLYGON);
    glColor3f(1.0f,1.0f,1.0f);
    glVertex2f(-0.80f,-0.22f);
    glVertex2f(-0.79f,-0.20f);
    glVertex2f(-0.78f,-0.22f);
    glVertex2f(-0.76f,-0.22f);
    glVertex2f(-0.775f,-0.23f);
    glVertex2f(-0.77f,-0.25f);
    glVertex2f(-0.79f,-0.24f);
    glVertex2f(-0.81f,-0.25f);
    glVertex2f(-0.805f,-0.235f);
    glVertex2f(-0.82f,-0.22f);
    glVertex2f(-0.80f,-0.22f);
    glEnd();
    glBegin(GL_POLYGON);
    glColor3f(1.0f,1.0f,1.0f);
    glVertex2f(-0.64f,-0.22f);
    glVertex2f(-0.63f,-0.20f);
    glVertex2f(-0.62f,-0.22f);
    glVertex2f(-0.60f,-0.22f);
    glVertex2f(-0.615f,-0.23f);
    glVertex2f(-0.61f,-0.25f);
    glVertex2f(-0.63f,-0.24f);
    glVertex2f(-0.65f,-0.25f);
    glVertex2f(-0.645f,-0.235f);
    glVertex2f(-0.66f,-0.22f);
    glVertex2f(-0.64f,-0.22f);
    glEnd();

    glBegin(GL_POLYGON);
    glColor3f(1.0f,1.0f,1.0f);
    glVertex2f(-0.67f,-0.3f);
    glVertex2f(-0.66f,-0.28f);
    glVertex2f(-0.65f,-0.30f);
    glVertex2f(-0.63f,-0.30f);
    glVertex2f(-0.645f,-0.31f);
    glVertex2f(-0.64f,-0.33f);
    glVertex2f(-0.66f,-0.32f);
    glVertex2f(-0.68f,-0.33f);
    glVertex2f(-0.675f,-0.315f);
    glVertex2f(-0.69f,-0.30f);
    glVertex2f(-0.67f,-0.30f);
    glEnd();

     //United Kingdom
    glBegin(GL_POLYGON);
    glColor3ub(0.0f,51.0f,102.0f);
    glVertex2f(0.1f,-0.1f);
    glVertex2f(0.9f,-0.1f);
    glVertex2f(0.9f,-0.7f);
    glVertex2f(0.1f,-0.7f);
    glEnd();
    glBegin(GL_POLYGON);
    glColor3f(1.0f,1.0f,1.0f);
    glVertex2f(0.1f,-0.64f);
    glVertex2f(0.1f,-0.7f);
    glVertex2f(0.16f,-0.7f);
    glVertex2f(0.9f,-0.16f);
    glVertex2f(0.9f,-0.1f);
    glVertex2f(0.84f,-0.1f);
    glEnd();
    glBegin(GL_POLYGON);
    glColor3f(1.0f,1.0f,1.0f);
    glVertex2f(0.16f,-0.1f);
    glVertex2f(0.1f,-0.1f);
    glVertex2f(0.1f,-0.16f);
    glVertex2f(0.84f,-0.7f);
    glVertex2f(0.9f,-0.7f);
    glVertex2f(0.9f,-0.64f);
    glEnd();
    glBegin(GL_POLYGON);
    glColor3ub(204.0f,0.0f,0.0f);
    glVertex2f(0.1f,-0.7f);
    glVertex2f(0.14f,-0.7f);
    glVertex2f(0.52f,-0.42f);
    glVertex2f(0.5f,-0.4f);
    glEnd();
    glBegin(GL_POLYGON);
    glColor3ub(204.0f,0.0f,0.0f);
    glVertex2f(0.1f,-0.1f);
    glVertex2f(0.1f,-0.14f);
    glVertex2f(0.48f,-0.42f);
    glVertex2f(0.5f,-0.4f);
    glEnd();
    glBegin(GL_POLYGON);
    glColor3ub(204.0f,0.0f,0.0f);
    glVertex2f(0.9f,-0.1f);
    glVertex2f(0.86f,-0.1f);
    glVertex2f(0.5f,-0.37f);
    glVertex2f(0.5f,-0.4f);
    glEnd();
    glBegin(GL_POLYGON);
    glColor3ub(204.0f,0.0f,0.0f);
    glVertex2f(0.9f,-0.7f);
    glVertex2f(0.9f,-0.66f);
    glVertex2f(0.52f,-0.38f);
    glVertex2f(0.5f,-0.4f);
    glEnd();
    glBegin(GL_POLYGON);
    glColor3f(1.0f,1.0f,1.0f);
    glVertex2f(0.44f,-0.1f);
    glVertex2f(0.56f,-0.1f);
    glVertex2f(0.56f,-0.7f);
    glVertex2f(0.44f,-0.7f);
    glEnd();
    glBegin(GL_POLYGON);
    glColor3f(1.0f,1.0f,1.0f);
    glVertex2f(0.1f,-0.34f);
    glVertex2f(0.1f,-0.46f);
    glVertex2f(0.9f,-0.46f);
    glVertex2f(0.9f,-0.34f);
    glEnd();
    glBegin(GL_POLYGON);
    glColor3ub(204.0f,0.0f,0.0f);
    glVertex2f(0.46f,-0.1f);
    glVertex2f(0.54f,-0.1f);
    glVertex2f(0.54f,-0.7f);
    glVertex2f(0.46f,-0.7f);
    glEnd();
    glBegin(GL_POLYGON);
    glColor3ub(204.0f,0.0f,0.0f);
    glVertex2f(0.1f,-0.36f);
    glVertex2f(0.1f,-0.44f);
    glVertex2f(0.9f,-0.44f);
    glVertex2f(0.9f,-0.36f);
    glEnd();

    glFlush(); // Render now
}
int main(int argc, char** argv)
{
    glutInit(&argc, argv);
    glutInitWindowSize(720, 480);
    glutInitWindowPosition(80, 50);
    glutCreateWindow("OpenGL Setup Test");
    glutDisplayFunc(display);
    glutMainLoop();
    return 0;
}

